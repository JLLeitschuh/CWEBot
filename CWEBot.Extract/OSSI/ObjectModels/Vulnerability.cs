using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Newtonsoft.Json;

namespace CWEBot.Extract.OSSIndex
{
    public class Vulnerability
    {
        #region Properties
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("versions")]
        public string[] Versions { get; set; }

        [JsonProperty("references")]
        public string[] References { get; set; }

        [JsonProperty("published")]
        public long? PublishedTS { get; set; }

        [JsonIgnore]
        public DateTime? Published
        {
            get
            {
                if (PublishedTS.HasValue && PublishedTS.Value > 0)
                {
                    return DateTimeOffset.FromUnixTimeMilliseconds(PublishedTS.Value).UtcDateTime;
                }
                else return null;
            }
        }
        [JsonProperty("updated")]
        public long? UpdatedTS { get; set; }

        [JsonProperty]
        public DateTime? Updated
        {
            get
            {
                if (UpdatedTS.HasValue && UpdatedTS.Value > 0)
                {
                    return DateTimeOffset.FromUnixTimeMilliseconds(UpdatedTS.Value).UtcDateTime;
                }
                else return null;
            }
        }

        [JsonProperty("cve")]
        public string CVE { get; set; }
        #endregion

        #region Overriden methods
        
        #endregion
    }

    public class VulnerablityComparator : IEqualityComparer<Vulnerability>
    {
        public bool Equals(Vulnerability v1, Vulnerability v2)
        {
            return v1.Id.Equals(v2.Id);

        }

        public int GetHashCode(Vulnerability v)
        {
            return v.Id.GetHashCode();
        }
    }
}
